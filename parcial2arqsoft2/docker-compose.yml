version: '3'

volumes:
  images:
networks:
  k6:
  grafana:
  front:
services:
  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5671:5671"
      - "5672:5672"
      - "8080:15672"
    volumes:
      - ./configs/rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./configs/rabbit/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 5s
      retries: 30

  solr:
    container_name: solr
    image: solr
    ports:
      - "8983:8983"
    volumes:
      - ./configs/solr/managed-schema:/opt/solr/server/solr/configsets/_default/conf/managed-schema
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - items

  users_db:
    container_name: users_db
    build: ./db/users
    environment:
      MYSQL_DATABASE: users
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    ports:
      - "3306:3306"
    volumes:
      - ./db/users:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root" ]
      timeout: 20s
      retries: 10

  items_db:
    container_name: items_db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_DATA_DIR: /data/db
      MONGO_INITDB_DAABASE: items
    ports:
      - "27017:27017"

  items_service:
    build: services/items
    depends_on:
      items_db:
        condition: service_started
      rabbit:
        condition: service_healthy
    volumes:
      - images:/exports/images
    ports:
      - "8090:8090"

  users_service:
    build: services/users
    depends_on:
      users_db:
        condition: service_healthy
      memcached:
        condition: service_started
      rabbit:
        condition: service_healthy
    ports:
      - "9000:9000"

  consumers_service:
    build: services/consumers
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - "9003:9003"

  messages_service:
    build: services/messages
    depends_on:
      users_db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    ports:
      - "9001:9001"

  memcached:
    container_name: memcache
    image: memcached
    ports:
      - "11211:11211"

  cache_service:
    build: services/cache
    depends_on:
      memcached:
        condition: service_started
    ports:
      - "9002:9002"

  search_service:
    build: services/search
    depends_on:
      solr:
        condition: service_started
      items:
        condition: service_started
    deploy:
      mode: replicated
      replicas: 2
  
  frontend:
    networks:
      - front
    container_name: frontend
    build: ./frontend
    depends_on:
      search_service:
        condition: service_started
    volumes:
      - images:/frontend/public/items
    ports:
      - "3000:3000"

  nginx:
    container_name: nginx
    build: configs/nginx
    depends_on:
      search_service:
        condition: service_started
    ports:
      - "80:80"

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    networks:
      - grafana
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./load_tests/grafana/dashboards:/var/lib/grafana/dashboards
      - ./load_tests/grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./load_tests/grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  k6:
    container_name: K6
    image: loadimpact/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://host.docker.internal:8086/k6
    volumes:
      - ./load_tests/scripts:/scripts

  